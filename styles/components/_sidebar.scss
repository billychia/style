
/// Since floated elements cannot easily expand to the height of their parents
/// this mixin is provided to apply the sidebar background with the correct
/// column width to a parent element.
/// @output linear-gradient
@mixin sidebar-background {
    $bg-width-left: flex-grid(4);
    $bg-width-right: 100 - $bg-width-left;

    @include linear-gradient(to left, transparent $bg-width-right, $light-grey $bg-width-left);
}

.sidebar {
    @include span-columns(4);
    height: 100%;
    padding-top: $navbar-height + $spacing-medium;

    @include media($tablet) {
        @include span-columns(3);
    }
    @include media($mobile) {
        @include fill-parent;
        display: none;
    }
}

.sidebar--menu-list {
    list-style-type: none;
    margin: 0;
    padding: 0;

    > :first-child {
        font-weight: bold;
        margin-bottom: $spacing-standard;
    }

    a {
        display: inline-block;
        width: 100%;
        margin: 0;
    }

    li {
        font-size: 12px;
        margin: 0;
        padding-left: $spacing-standard;

    }
}

.sidebar--header {
    cursor: default;
    font-weight: bold;

    // TODO: use this for the open state when this becomes collapsible
    // &:before {
    //     // fa-caret-down
    //     content: '\f0d7';
    //     font-family: 'FontAwesome';
    //     margin-right: em($spacing-mini);
    // }
}

@for $i from 0 through 2 {
    $item-vertical-padding: $spacing-mini / 2;
    $index: $i + 1;

    .sidebar--header.sidebar--level-#{$index} {
        $horizontal-padding: $spacing-standard;
        @if $i > 0 {
            $horizontal-padding: $horizontal-padding * ($i * 2);
        }
        padding: $item-vertical-padding $horizontal-padding;
    }
    .sidebar--level-#{$index} > a {
        padding: $item-vertical-padding ($spacing-standard * $i);
    }

}

// Color theme

.sidebar--menu-list {
    a, a:visited, a:active {
        color: $text;
    }
    a:hover {
        color: $red;
    }

    .sidebar--current-item a {
        color: $red;
    }
}

